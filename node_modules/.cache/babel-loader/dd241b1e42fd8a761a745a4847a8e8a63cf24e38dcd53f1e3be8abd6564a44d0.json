{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\LogicFInder\\\\Orange_Dashboard-main\\\\src\\\\Components\\\\Excel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const readExcel = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n    promise.then(d => {\n      setItems(d);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        const file = e.target.files[0];\n        readExcel(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table container\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: d.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, d.item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","App","items","setItems","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","files","map","item","Description"],"sources":["D:/Data/LogicFInder/Orange_Dashboard-main/src/Components/Excel.js"],"sourcesContent":["import React, { useState} from 'react';\nimport * as XLSX from 'xlsx';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n\n\n  const readExcel = (file) => {\n\n    const promise = new Promise((resolve, reject) => {\n\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file)\n\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n\n        const wsname = wb.SheetNames[0];\n\n        const ws = wb.Sheets[wsname];\n\n        const data = XLSX.utils.sheet_to_json(ws);\n\n        resolve(data);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n\n    promise.then((d) => {\n      setItems(d)\n    });\n  };\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div>\n      <input type=\"file\"\n        onChange={(e) => {\n          const file = e.target.files[0];\n          readExcel(file);\n        }}\n      />\n      <table class=\"table container\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Item</th>\n            <th scope=\"col\">Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            items.map((d) => (\n\n              <tr key = {d.item}>\n                <th>{d.item}</th>\n                <td>{d.Description}</td>\n              </tr>\n\n            ))\n          }\n\n\n\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC;AAE7B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAItC,MAAMK,SAAS,GAAIC,IAAI,IAAK;IAE1B,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAE/C,MAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;MACnCD,UAAU,CAACE,iBAAiB,CAACP,IAAI,CAAC;MAElCK,UAAU,CAACG,MAAM,GAAIC,CAAC,IAAK;QACzB,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;QAEnC,MAAMC,EAAE,GAAGlB,IAAI,CAACmB,IAAI,CAACJ,WAAW,EAAE;UAAEK,IAAI,EAAE;QAAS,CAAC,CAAC;QAErD,MAAMC,MAAM,GAAGH,EAAE,CAACI,UAAU,CAAC,CAAC,CAAC;QAE/B,MAAMC,EAAE,GAAGL,EAAE,CAACM,MAAM,CAACH,MAAM,CAAC;QAE5B,MAAMI,IAAI,GAAGzB,IAAI,CAAC0B,KAAK,CAACC,aAAa,CAACJ,EAAE,CAAC;QAEzCf,OAAO,CAACiB,IAAI,CAAC;MACf,CAAC;MAEDf,UAAU,CAACkB,OAAO,GAAIC,KAAK,IAAK;QAC9BpB,MAAM,CAACoB,KAAK,CAAC;MACf,CAAC;IACH,CAAC,CAAC;IAEFvB,OAAO,CAACwB,IAAI,CAAEC,CAAC,IAAK;MAClB5B,QAAQ,CAAC4B,CAAC,CAAC;IACb,CAAC,CAAC;EACJ,CAAC;EAWD,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAM;MAChB,QAAQ,EAAGjB,CAAC,IAAK;QACf,MAAMT,IAAI,GAAGS,CAAC,CAACE,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC;QAC9B5B,SAAS,CAACC,IAAI,CAAC;MACjB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAO,KAAK,EAAC,iBAAiB;MAAA,wBAC5B;QAAA,uBACE;UAAA,wBACE;YAAI,KAAK,EAAC,KAAK;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACzB;YAAI,KAAK,EAAC,KAAK;YAAA,UAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MAC7B;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAEIH,KAAK,CAAC+B,GAAG,CAAEF,CAAC,iBAEV;UAAA,wBACE;YAAA,UAAKA,CAAC,CAACG;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACjB;YAAA,UAAKH,CAAC,CAACI;UAAW;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAFfJ,CAAC,CAACG,IAAI;UAAA;UAAA;UAAA;QAAA,QAKlB;MAAC;QAAA;QAAA;QAAA;MAAA,QAKE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GA9EQjC,GAAG;AAAA,KAAHA,GAAG;AAgFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}